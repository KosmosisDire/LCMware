"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""


from io import BytesIO
import struct

import core

class EmptyServiceResponse(object):

    __slots__ = ["response_header"]

    __typenames__ = ["core.ServiceResponseHeader"]

    __dimensions__ = [None]

    def __init__(self):
        self.response_header = core.ServiceResponseHeader()
        """ LCM Type: core.ServiceResponseHeader """

    def encode(self):
        buf = BytesIO()
        buf.write(EmptyServiceResponse._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        assert self.response_header._get_packed_fingerprint() == core.ServiceResponseHeader._get_packed_fingerprint()
        self.response_header._encode_one(buf)

    @staticmethod
    def decode(data: bytes):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != EmptyServiceResponse._get_packed_fingerprint():
            raise ValueError("Decode error")
        return EmptyServiceResponse._decode_one(buf)

    @staticmethod
    def _decode_one(buf):
        self = EmptyServiceResponse()
        self.response_header = core.ServiceResponseHeader._decode_one(buf)
        return self

    @staticmethod
    def _get_hash_recursive(parents):
        if EmptyServiceResponse in parents: return 0
        newparents = parents + [EmptyServiceResponse]
        tmphash = (0xbbccb38ab2d0c608+ core.ServiceResponseHeader._get_hash_recursive(newparents)) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff) + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _packed_fingerprint = None

    @staticmethod
    def _get_packed_fingerprint():
        if EmptyServiceResponse._packed_fingerprint is None:
            EmptyServiceResponse._packed_fingerprint = struct.pack(">Q", EmptyServiceResponse._get_hash_recursive([]))
        return EmptyServiceResponse._packed_fingerprint

    def get_hash(self):
        """Get the LCM hash of the struct"""
        return struct.unpack(">Q", EmptyServiceResponse._get_packed_fingerprint())[0]

