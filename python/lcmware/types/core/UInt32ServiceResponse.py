"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""


from io import BytesIO
import struct

import core

class UInt32ServiceResponse(object):

    __slots__ = ["response_header", "result"]

    __typenames__ = ["core.ServiceResponseHeader", "int32_t"]

    __dimensions__ = [None, None]

    def __init__(self):
        self.response_header = core.ServiceResponseHeader()
        """ LCM Type: core.ServiceResponseHeader """
        self.result = 0
        """ LCM Type: int32_t """

    def encode(self):
        buf = BytesIO()
        buf.write(UInt32ServiceResponse._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        assert self.response_header._get_packed_fingerprint() == core.ServiceResponseHeader._get_packed_fingerprint()
        self.response_header._encode_one(buf)
        buf.write(struct.pack(">i", self.result))

    @staticmethod
    def decode(data: bytes):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != UInt32ServiceResponse._get_packed_fingerprint():
            raise ValueError("Decode error")
        return UInt32ServiceResponse._decode_one(buf)

    @staticmethod
    def _decode_one(buf):
        self = UInt32ServiceResponse()
        self.response_header = core.ServiceResponseHeader._decode_one(buf)
        self.result = struct.unpack(">i", buf.read(4))[0]
        return self

    @staticmethod
    def _get_hash_recursive(parents):
        if UInt32ServiceResponse in parents: return 0
        newparents = parents + [UInt32ServiceResponse]
        tmphash = (0x6ce08876510b5aeb+ core.ServiceResponseHeader._get_hash_recursive(newparents)) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff) + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _packed_fingerprint = None

    @staticmethod
    def _get_packed_fingerprint():
        if UInt32ServiceResponse._packed_fingerprint is None:
            UInt32ServiceResponse._packed_fingerprint = struct.pack(">Q", UInt32ServiceResponse._get_hash_recursive([]))
        return UInt32ServiceResponse._packed_fingerprint

    def get_hash(self):
        """Get the LCM hash of the struct"""
        return struct.unpack(">Q", UInt32ServiceResponse._get_packed_fingerprint())[0]

